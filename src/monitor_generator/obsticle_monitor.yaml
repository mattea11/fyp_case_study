nodes: # here we list the nodes we are going to monitor
  - node:
      name: gazebo
      package: curiosity_mars_rover_navigation
      path: /home/mattea/curiosity_mars_rover_ws/src/curiosity_mars_rover_gazebo/launch/main_mars_terrain.launch
  # - node:
  #     name: listener
  #     package: curiosity_mars_rover_navigation
  #     path: /home/mattea/curiosity_mars_rover_ws/src/curiosity_mars_rover_gazebo/launch/main_mars_terrain.launch

monitors: # here we list the monitors we are going to generate
  - monitor:
      id: obsticle_dist
      log: log_files/obsticle_dist.txt # file where the monitor will log the observed events
      silent: False # we let the monitor to print info during its execution
      warning: 1 #we let the monitor to publish error content through monitor_error topic otherwise (for warning:0), monitor_error does not publish anything.
      oracle: # the oracle running and ready to check the specification (localhost in this case)
        port: 9090 #8080 # the port where it is listening
        url: 127.0.0.1 # the url where it is listening
        action: nothing # the oracle will not change the message
      topics: # the list of topics this monitor is going to intercept
        - name: tf # name of the topic
          type: TFMessage #  std_msgs.msg.String # type of the topic
          action: log #
          publishers:
            - gazebo 
            # - move_base #
            # - robot_state_publisher # 